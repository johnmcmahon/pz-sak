@Library('pipelib@master') _

def THREADFIX_ID = env.THREADFIX_ID ? env.THREADFIX_ID : '115'

node {
// ('sl61')
  def nodejs = tool 'NodeJS_6'

  stage('Setup') {
    deleteDir()
    git([
      url: env.GIT_URL ? env.GIT_URL : 'https://github.com/venicegeo/pz-sak',
      branch: "master"
    ])
  }
**dot mil needs credentials to clone**
  stage('Setup') {
    deleteDir()
    git url: "git@gitlab.gs.mil:venice/pz-jobcommon", branch: "master", credentialsId: "aaef610c-9fd0-4812-9027-755ff3a872a5"
  }

  stage('Karma Tests') {
    ~~npmSetup()~~
    sh "npm stuff"
    withEnv(["PATH+=${nodejs}/bin"]) {
      sh './ci/karma.sh'
    }
  }

  stage('Archive') {
    ~~sh './ci/archive.sh'~~
    ~~mavenPush()~~
  }

  stage('Initial Scans') {
    ~~dependencyCheck {~~
      ~~threadfixId = THREADFIX_ID~~
    ~~}~~
      sh "owasp stuff"

    // We shouldn't need to run sonar again because the lcov.info file was
    // already generated with karma tests and the sonar-project.properties file exists
    // sh './ci/sonar.sh'
  }

  stage ('CI Deploy') {
    ~~cfPush()~~
    sh "cf auth"
    sh "cf push"
    ~~zap {~~
      ~~threadfixId = THREADFIX_ID~~
    ~~}~~
    sh "owasp things"
    ~~cfBgDeploy()~~
    sh "cf bg deploy"
  }

  stage ('Int: Integration Testing') {
    ~~postman()~~
    sh "postman stuff"
  }

  ## We probably don't need this step?
  stage('Reset') {
    git([
      url: env.GIT_URL ? env.GIT_URL : 'https://github.com/venicegeo/pz-sak',
      branch: "master"
    ])
  }

  stage('Staging Deploy') {
    cfPush {
      cfSpace = 'stage'
    }
    cfBgDeploy {
      cfSpace = 'stage'
    }
  }

  stage ('Stage: Integration Testing') {
    postman {
      cfSpace = 'stage'
    }
  }

  ## We may not need this
  stage('Reset') {
    git([
      url: env.GIT_URL ? env.GIT_URL : 'https://github.com/venicegeo/pz-sak',
      branch: "master"
    ])
  }

  stage('Final Scans') {
    ~~fortify {~~
      ~~threadfixId = THREADFIX_ID~~
    ~~}~~
    sh "/opt/fortify stuff"
  }
  ## We do this already in the beginning?
  stage ('Cleanup') {
    deleteDir()
  }
}
